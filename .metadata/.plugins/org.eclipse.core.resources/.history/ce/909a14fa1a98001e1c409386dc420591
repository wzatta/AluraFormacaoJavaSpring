package com.cilazatta.vollMed.entities;

import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString
//@Entity
public class AgendamentoDeConsultas {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@EqualsAndHashCode.Include
	private Long id;
	
	@ManyToOne
	private CadastroDePaciente paciente;
	
	@ManyToOne
	private CadastroDeMedicos medico;
	
	@Column(name = "datadoagendamento", nullable = false)
	private LocalDateTime dataDoAgendamento;
	
	private Boolean horarioDeAtendimento = false;
	
	@Column(name = "dataagendada", nullable = false)
	private LocalDate dataAgendada;
	
	@Column(name = "datahoraagendada", nullable = false)
	private LocalDateTime dataHoraAgendada;

	public void setId(Long id) {
		this.id = id;
	}

	public void setPaciente(CadastroDePaciente paciente) {
		this.paciente = paciente;
	}

	public void setMedico(CadastroDeMedicos medico) {
		this.medico = medico;
	}

	public void setDataDoAgendamento(LocalDateTime dataDoAgendamento) {
		this.dataDoAgendamento(dataDoAgendamento);
	}

	public void setDataAgendada(LocalDate dataAgendada) {
		this.dataAgendada = dataAgendada;
	}

	public void setDataHoraAgendada(LocalDateTime dataHoraAgendada) {
		this.dataHoraAgendada = dataHoraAgendada;
	}
	
	public String dataDoAgendamento(LocalDateTime datahora) {
		if(datahora.getDayOfWeek()!=DayOfWeek.SUNDAY) {
			if(datahora.getHour()>7 && datahora.getHour()<19) {
				this.dataDoAgendamento = datahora;
				return "Agendamento realizado";
			} else {
			 return "HorÃ¡rio de Agendamento 7 as 19";	
			}
		} else {
			return "Clinica Fechada Domingo";		}
		
	}

}
