package com.cilazatta.vollMed.services;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.web.PageableDefault;
import org.springframework.stereotype.Service;

import com.cilazatta.vollMed.dto.CadastroDePacienteAtualizaDTO;
import com.cilazatta.vollMed.dto.CadastroDePacienteDTO;
import com.cilazatta.vollMed.dto.CadastroDePacienteListaDTO;
import com.cilazatta.vollMed.dto.mapper.CadastroDePacienteMapper;
import com.cilazatta.vollMed.entities.CadastroDePaciente;
import com.cilazatta.vollMed.exceptions.RecordNotFoundException;
import com.cilazatta.vollMed.repository.CadastroDePacienteRepository;

@Service
public class CadastroDePacienteService {

	private final CadastroDePacienteRepository repo;
	private final CadastroDePacienteMapper mapper;

	public CadastroDePacienteService(CadastroDePacienteRepository repo, CadastroDePacienteMapper mapper) {
		this.repo = repo;
		this.mapper = mapper;
	}

	public CadastroDePacienteDTO cadastrar(CadastroDePacienteDTO dto) {
		CadastroDePaciente paciente = mapper.toEntity(dto);
		paciente = repo.save(paciente);
		return mapper.toDTO(paciente);
	}
	
	public CadastroDePacienteAtualizaDTO atualizarPaciente(CadastroDePacienteAtualizaDTO dto) {
		CadastroDePaciente paciente = new CadastroDePaciente();
		paciente.atualizaDados(dto);
		return mapper.toAtualizaDTO(paciente);
	}

	public List<CadastroDePacienteDTO> findAll() {
		return repo.findAll().stream().map(mapper::toDTO).collect(Collectors.toList());
	}
	
	public Page<CadastroDePacienteListaDTO> listarPaciente(@PageableDefault(size = 10, sort = {"nome"}, direction = Direction.ASC) Pageable paginacao){
		return repo.findAll(paginacao)
				.map(mapper::toListaDTO);
	}

	public CadastroDePacienteDTO findByid(Long id) {
		CadastroDePaciente paciente = repo.findById(id).orElseThrow(() -> new RecordNotFoundException(id));
		return mapper.toDTO(paciente);
	}

}
