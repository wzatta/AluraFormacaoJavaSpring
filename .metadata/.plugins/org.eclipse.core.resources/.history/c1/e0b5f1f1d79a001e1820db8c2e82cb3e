package com.cilazatta.vollMed.exceptions;

import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.Collectors;

import org.apache.tomcat.util.bcel.Const;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import jakarta.persistence.EntityNotFoundException;
import jakarta.validation.ConstraintViolationException;

@RestControllerAdvice
public class TratadorDeErros {

	@ExceptionHandler({EntityNotFoundException.class, NoSuchElementException.class} )
	public ResponseEntity  tratarErro404() {
		return ResponseEntity.notFound().build();
	}
	
/*	@ExceptionHandler(MethodArgumentNotValidException.class)
	public ResponseEntity tratarErro400(MethodArgumentNotValidException ex) {
		var erros = ex.getFieldErrors();
		List<DadosErroValidacaoDTO> listErros = erros.stream()
				.map(DadosErroValidacaoDTO::new)
				.collect(Collectors.toList());
		return ResponseEntity.badRequest().body(listErros);
	}
	
	private record DadosErroValidacaoDTO(String campo, String mensagem) {
		public DadosErroValidacaoDTO(FieldError erro) {
			this(erro.getField(), erro.getDefaultMessage());
		}
	}
	*/
}
