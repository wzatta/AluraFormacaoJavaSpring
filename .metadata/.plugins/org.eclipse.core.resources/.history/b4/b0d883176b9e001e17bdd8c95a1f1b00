package com.cilazata.services;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cilazatta.dto.view.Vw_Grafo_Bar_Os_serie_DTO;
import com.cilazatta.dto.view.Vw_Grafo_Bar_serie_DTO;
import com.cilazatta.dto.view.Vw_Grapho_Bar_DTO;
import com.cilazatta.dto.view.Vw_Grapho_Bar_Os_DTO;
import com.cilazatta.entity.view.Vw_Loc_Mensal;
import com.cilazatta.entity.view.Vw_Loc_Mensal_Os;
import com.cilazatta.entity.view.Vw_Loc_Mensal_Os_For;
import com.cilazatta.entity.view.Vw_Loc_Mensal_Vm;
import com.cilazatta.repositories.Vw_Loc_Mensal_Os_For_ReadOnlyRepository;
import com.cilazatta.repositories.Vw_Loc_Mensal_Os_ReadOnlyRepository;
import com.cilazatta.repositories.Vw_Loc_Mensal_ReadOnlyRepository;
import com.cilazatta.repositories.Vw_Loc_Mensal_Vm_ReadOnlyRepository;

@Service
public class Vw_Loc_Mensal_Service {
	
	@Autowired
	private Vw_Loc_Mensal_ReadOnlyRepository repo;

	@Autowired
	private Vw_Loc_Mensal_Os_ReadOnlyRepository osRepo;

	@Autowired
	private Vw_Loc_Mensal_Os_For_ReadOnlyRepository osForRepo;
	
	@Autowired
	private Vw_Loc_Mensal_Vm_ReadOnlyRepository vmRepo;
	
	
	public List<Vw_Loc_Mensal> findAll(){
		return repo.findAll();
	}
	public List<Vw_Loc_Mensal_Os> findAllOs(){
		return osRepo.findAll();
	}

	// Dados para o Grafico Valor Total de Locação.
	
	public List<Vw_Grafo_Bar_serie_DTO> findDadosGraphoBarVm(Long ano) {
		
		List<Vw_Grafo_Bar_serie_DTO> listserie = new ArrayList<Vw_Grafo_Bar_serie_DTO>();
		List<Vw_Loc_Mensal_Vm> lisDadosAno = this.vmRepo.searchYear(ano).stream()
				.sorted(Comparator.comparing(Vw_Loc_Mensal_Vm::getMonthnumber))
				.collect(Collectors.toList());
	
		lisDadosAno.stream()
				.forEach(r->{
					Vw_Grafo_Bar_serie_DTO serie = 
							new Vw_Grafo_Bar_serie_DTO(r.getMonthnumber().toString(), r.getValor());
					listserie.add(serie);
				});
		
		return listserie;
	}
	
	
// Dados para o Grafico Valores por Fornecedor.
	public List<Vw_Grapho_Bar_DTO> findDadosGraphoBar(Long ano) {
		List<Vw_Grapho_Bar_DTO> listDados = new ArrayList<Vw_Grapho_Bar_DTO>();
		List<Vw_Loc_Mensal> lisDadosAno = this.findAllYear(ano);
		for(int i = 1; i<=12; i++) {
			List<Vw_Grafo_Bar_serie_DTO> listserie = new ArrayList<Vw_Grafo_Bar_serie_DTO>();	
			int j = 0;
			for( ; j <lisDadosAno.size(); j++) {
				if(lisDadosAno.get(j).getMonthnumber()==i && (int)lisDadosAno.get(j).getYear()==ano) {
					Vw_Grafo_Bar_serie_DTO serie = 
							new Vw_Grafo_Bar_serie_DTO(lisDadosAno.get(j).getDenosocial()
									,lisDadosAno.get(j).getValor());
							listserie.add(serie);
				}
			}
			if(listserie.size()>0) {
			Vw_Grapho_Bar_DTO grapho = new Vw_Grapho_Bar_DTO(i, listserie);
			listDados.add(grapho);}
		}
		return listDados;
			}

	public List<Vw_Grapho_Bar_Os_DTO> findDadosGraphoBarOs(Long ano) {
		List<Vw_Grapho_Bar_Os_DTO> listDados = new ArrayList<Vw_Grapho_Bar_Os_DTO>();
		List<Vw_Loc_Mensal_Os> lisDadosAno = this.findAllOsYear(ano);
		for(int i = 1; i<=12; i++) {
			List<Vw_Grafo_Bar_Os_serie_DTO> listserie = new ArrayList<Vw_Grafo_Bar_Os_serie_DTO>();	
			int j = 0;
			for( ; j <lisDadosAno.size(); j++) {
				if(lisDadosAno.get(j).getMonthnumber()==i && (int)lisDadosAno.get(j).getYear()==ano) {
					Vw_Grafo_Bar_Os_serie_DTO serie = 
							new Vw_Grafo_Bar_Os_serie_DTO(lisDadosAno.get(j).getCodos()
									,lisDadosAno.get(j).getValor());
					listserie.add(serie);
				}
			}
			if(listserie.size()>0) {
				Vw_Grapho_Bar_Os_DTO grapho = new Vw_Grapho_Bar_Os_DTO(i, listserie);
				listDados.add(grapho);}
		}
		return listDados;
	}

	public List<Vw_Grapho_Bar_Os_DTO> findDadosGraphoBarOs(String Deno, Long ano) {
		List<Vw_Grapho_Bar_Os_DTO> listDados = new ArrayList<Vw_Grapho_Bar_Os_DTO>();
		List<Vw_Loc_Mensal_Os_For> lisDadosAno = this.osForRepo.searchP(Deno, ano);
		for(int i = 1; i<=12; i++) {
			List<Vw_Grafo_Bar_Os_serie_DTO> listserie = new ArrayList<Vw_Grafo_Bar_Os_serie_DTO>();	
			int j = 0;
			for( ; j <lisDadosAno.size(); j++) {
				if(lisDadosAno.get(j).getMonthnumber()==i && (int)lisDadosAno.get(j).getYear()==ano) {
					Vw_Grafo_Bar_Os_serie_DTO serie = 
							new Vw_Grafo_Bar_Os_serie_DTO(lisDadosAno.get(j).getCodos()
									,lisDadosAno.get(j).getValor());
					listserie.add(serie);
				}
			}
			if(listserie.size()>0) {
				Vw_Grapho_Bar_Os_DTO grapho = new Vw_Grapho_Bar_Os_DTO(i, listserie);
				listDados.add(grapho);}
		}
		return listDados;
	}
	
	public List<Vw_Grapho_Bar_DTO> findDadosGraphoBar(String deno, Long ano) {
		List<Vw_Grapho_Bar_DTO> listDados = new ArrayList<Vw_Grapho_Bar_DTO>();
		List<Vw_Loc_Mensal> lisDadosAno = repo.searchForYear(deno, ano);
		for(int i = 1; i<=12; i++) {
			List<Vw_Grafo_Bar_serie_DTO> listserie = new ArrayList<Vw_Grafo_Bar_serie_DTO>();	
			int j = 0;
			for( ; j <lisDadosAno.size(); j++) {
				if(lisDadosAno.get(j).getMonthnumber()==i && (int)lisDadosAno.get(j).getYear()==ano) {
					Vw_Grafo_Bar_serie_DTO serie = 
							new Vw_Grafo_Bar_serie_DTO(lisDadosAno.get(j).getDenosocial()
									,lisDadosAno.get(j).getValor());
							listserie.add(serie);
				}
			}
			if(listserie.size()>0) {
			Vw_Grapho_Bar_DTO grapho = new Vw_Grapho_Bar_DTO(i, listserie);
			listDados.add(grapho);}
		}
		return listDados;
			}
	
	
	
	public List<String> findAllDeno(){
		List<String> listDeno = this.findAll().stream()
				.map(r-> r.getDenosocial())
				.distinct()
				.sorted()
				.collect(Collectors.toList());
		return listDeno;
	}

	public List<Integer> findAllYear(){
		List<Integer> listYear = this.findAll().stream()
				.map(r-> r.getYear())
				.distinct()
				.sorted(Comparator.reverseOrder())
				.collect(Collectors.toList());
		return listYear;
	}
	
	public List<Vw_Loc_Mensal> findAllFor(String deno){
		return repo.searchP(deno);
	}
	
	public List<Vw_Loc_Mensal> findAllYear(Long ano){
		return repo.searchYear(ano);
	}

	public List<Vw_Loc_Mensal_Os> findAllOsYear(Long ano){
		return osRepo.searchYear(ano);
	}

}
