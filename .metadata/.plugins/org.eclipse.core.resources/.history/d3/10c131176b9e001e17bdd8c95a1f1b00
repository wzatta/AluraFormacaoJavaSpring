package com.cilazata.resources;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cilazatta.dto.FornecedorDTO;
import com.cilazatta.services.FornecedorService;

@RestController
@RequestMapping(value="api/v1/fornecedor")
public class FornecedorResource {

	@Autowired
	private FornecedorService service;
	
	
	@PostMapping
	public ResponseEntity<FornecedorDTO> insertObj(@RequestBody FornecedorDTO dto){
		dto = service.insertObj(dto);
		return ResponseEntity.created(null).body(dto);
	}

	
	@GetMapping
	public ResponseEntity<List<FornecedorDTO>> findAll(){
		return ResponseEntity.ok().body(service.findAll());
	}
	
	
	@GetMapping(value = "/{id}")
	public ResponseEntity<FornecedorDTO> findById(@PathVariable Long id){
		FornecedorDTO dto = service.findById(id);
		return ResponseEntity.ok().body(dto);
	}
	
	@PutMapping(value = "/{id}")
	public ResponseEntity<FornecedorDTO> update(@PathVariable Long id, @RequestBody FornecedorDTO dto){
		dto = service.update(id, dto);
		return ResponseEntity.ok().body(dto);
	}
	
	@DeleteMapping(value = "/{idfor}")
	public ResponseEntity<Void> delete(@PathVariable Long idfor){
		Boolean isDeletado = service.deleteById(idfor);
		if(isDeletado) {
			return ResponseEntity.noContent().<Void>build();
		} else {
			return ResponseEntity.notFound().build();
		}
	}
	
	
}
