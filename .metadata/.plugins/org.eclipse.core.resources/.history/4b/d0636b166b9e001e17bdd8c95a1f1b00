package com.cilazata.entity;

import java.io.Serializable;

import com.cilazatta.dto.NotaFiscalItemDTO;
import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@Entity
public class NotaFiscalItem implements Serializable  {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@EqualsAndHashCode.Include
	private Long idPk;
	

	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumn(name = "nff_id", nullable = false)
	@JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
	private NotaFiscal notaFiscal;
	
	
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumn(name = "prodd_id", nullable = false)
	@JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
	private Produto produto;	
	
	@Column(name = "qtde")
	@Getter @Setter private Double qtde;
	
	@Column(name = "vunit")
	private Double vunit;
	
	@Column(name = "vtotal")
	private Double vtotal;
	
	@Column(name = "vlocdiaria")
	private Double vLocDiaria;
	
	@Column(name = "vlocmensal")
	private Double vLocMensal;
	
	public NotaFiscalItem(NotaFiscalItemDTO dtoItem) {
		this.idPk = dtoItem.idpkdto();
		this.notaFiscal = dtoItem.nfdto().convert();
		this.produto = dtoItem.proddto().convert();
		this.qtde = Double.parseDouble(dtoItem.qtdedto());
		this.vunit = Double.parseDouble(dtoItem.vunitdto());
		this.vtotal = Double.parseDouble(dtoItem.vtotaldto());
		this.vLocDiaria = Double.parseDouble(dtoItem.vlocdiariadto());
		this.vLocMensal = Double.parseDouble(dtoItem.vlocmensaldto());
	}
	
	public NotaFiscalItemDTO convert() {
		return new NotaFiscalItemDTO(
				this.getIdPk(),
				this.getNotaFiscal().convert(), 
				this.getProduto().convert(),
				this.qtde.toString(), this.vunit.toString(), this.vtotal.toString(),
				this.vLocDiaria.toString(), this.vLocMensal.toString());
	}
		
}
