package com.cilazata.services;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cilazatta.dto.PeriodoMedicaoDTO;
import com.cilazatta.entity.PeriodoMedicao;
import com.cilazatta.repositories.PeriodoMedicaoRepository;
import com.cilazatta.services.exeptions.ObjectNotFoundException;

@Service
public class PeriodoMedicaoService {

	@Autowired
	private PeriodoMedicaoRepository objRepo;
	
	
	public PeriodoMedicaoDTO insertObj(PeriodoMedicaoDTO dto) {
		PeriodoMedicao obj = dto.convert();
		obj = objRepo.save(obj);
		return obj.convert();
	}
	
	public List<PeriodoMedicaoDTO> findAll(){
		List<PeriodoMedicao> listObj = objRepo.findAll();
		List<PeriodoMedicaoDTO> objDto = listObj.stream()
				.map(r -> r.convert())
				.collect(Collectors.toList());
		return objDto;
	}
	
	public PeriodoMedicaoDTO findById(Long id) {
		Optional<PeriodoMedicao> optionalObj = objRepo.findById(id);
		PeriodoMedicao obj = optionalObj.orElseThrow(()-> new ObjectNotFoundException("Registro NÃ£o Encontrado"));
		return obj.convert();
	}
	
	public PeriodoMedicaoDTO update(Long id, PeriodoMedicaoDTO dto) {
		PeriodoMedicao obj = objRepo.getReferenceById(id);
		obj = updateData(obj, dto);
		obj = objRepo.save(obj);
		return obj.convert();
	}
	
	private PeriodoMedicao updateData(PeriodoMedicao obj, PeriodoMedicaoDTO dto) {
		obj = dto.convert();
		return obj;
	}
	
	public Boolean deleteById(Long id) {
		return objRepo.findById(id).map(recordFound -> {
			objRepo.deleteById(id);
			return true;
		}).orElse(false);
	}
	
	public List<PeriodoMedicaoDTO> findPeriodoFornec(LocalDate dateLocInicial){
		List<PeriodoMedicaoDTO> pm = this.findAll().stream()
				.filter(r-> r.datainicialdto().isAfter(dateLocInicial) &
						r.datainicialdto().isBefore(LocalDate.now()))
				.collect(Collectors.toList());
		return pm;
	}
	
	
}
