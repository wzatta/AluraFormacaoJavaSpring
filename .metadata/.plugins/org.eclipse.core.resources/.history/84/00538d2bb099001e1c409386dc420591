package com.cilazatta.vollMed.services;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.cilazatta.vollMed.dto.AgendamentoDeConsultaDTO;
import com.cilazatta.vollMed.dto.RequestAgendaMedicoDTO;
import com.cilazatta.vollMed.dto.ResponseAgendaMedicoDTO;
import com.cilazatta.vollMed.dto.mapper.AgendamentoDeConsultasMapper;
import com.cilazatta.vollMed.entities.AgendamentoDeConsultas;
import com.cilazatta.vollMed.entities.CadastroDeMedicos;
import com.cilazatta.vollMed.entities.CadastroDePaciente;
import com.cilazatta.vollMed.repository.AgendamentoDeConsultaRepository;
import com.cilazatta.vollMed.repository.CadastroDeMedicosRepository;
import com.cilazatta.vollMed.repository.CadastroDePacienteRepository;

@Service
public class AgendamentoDeConsultaService {

	private final CadastroDePacienteRepository pacienteRepo;
	private final CadastroDeMedicosRepository medicoRepo;
	private final AgendamentoDeConsultaRepository agendaRepo;
	private final AgendamentoDeConsultasMapper mapper;
	
	public AgendamentoDeConsultaService(CadastroDePacienteRepository pacienteRepo,
			CadastroDeMedicosRepository medicoRepo, 
			AgendamentoDeConsultaRepository agendaRepo,
			AgendamentoDeConsultasMapper mapper
			) {
			this.agendaRepo = agendaRepo;
			this.medicoRepo = medicoRepo;
			this.pacienteRepo = pacienteRepo;
			this.mapper = mapper;
	}
	
	public void agendarConsulta(AgendamentoDeConsultaDTO dto) {

		System.out.println(dto.toString());
		
		AgendamentoDeConsultas agenda = new AgendamentoDeConsultas();

		if (agenda.verificarHorarioDeAtendimento()) {
			CadastroDePaciente paciente = this.pacienteRepo.findById(dto.idPaciente()).get();
				System.out.println(paciente.toString());
			CadastroDeMedicos medico = this.medicoRepo.findById(dto.idMedico()).get();
			agenda.setPaciente(paciente);
			agenda.setMedico(medico);
			agenda.setDataDoAgendamento(dto.dataDoAgendamento());;
			agenda.setDataAgendada(dto.dataDaConsuslta());
			agenda.setHoraAgendada(dto.horario());
			this.agendaRepo.save(agenda);
		
		} else {
			System.out.println("Hor√°rio de Atendimento Segunda a Sabado, 7: as 19 horas");
		}
	}	
//=================================	

	public List<ResponseAgendaMedicoDTO> findByMedico(RequestAgendaMedicoDTO dto){
		CadastroDeMedicos medico  = this.medicoRepo.findById(dto.id()).get();
		List<ResponseAgendaMedicoDTO> meusCompromissos
			= this.agendaRepo.findBymedico(medico).stream()
				.map(r-> this.mapper.toAgendaDTO(r))
				.collect(Collectors.toList());
			return meusCompromissos;
		}
		
		
	

}
